// This file is auto-generated by rpcc.
//
// Copyright (c) 2021 Markku Rossi.
//
// All rights reserved.
//

package pkcs11

import (
	"log"
)

// AttributeType defines basic protocol type CK_ATTRIBUTE_TYPE.
type AttributeType uint32

// Bbool defines basic protocol type CK_BBOOL.
type Bbool bool

// Byte defines basic protocol type CK_BYTE.
type Byte = byte

// Char defines basic protocol type CK_CHAR.
type Char = byte

// Flags defines basic protocol type CK_FLAGS.
type Flags uint32

// KeyType defines basic protocol type CK_KEY_TYPE.
type KeyType uint32

// MechanismType defines basic protocol type CK_MECHANISM_TYPE.
type MechanismType Ulong

// ObjectClass defines basic protocol type CK_OBJECT_CLASS.
type ObjectClass uint32

// ObjectHandle defines basic protocol type CK_OBJECT_HANDLE.
type ObjectHandle uint32

// SessionHandle defines basic protocol type CK_SESSION_HANDLE.
type SessionHandle uint32

// SlotID defines basic protocol type CK_SLOT_ID.
type SlotID Ulong

// SlotIDPtr defines basic protocol type CK_SLOT_ID_PTR.
type SlotIDPtr uint32

// Ulong defines basic protocol type CK_ULONG.
type Ulong uint32

// UlongPtr defines basic protocol type CK_ULONG_PTR.
type UlongPtr uint32

// UserType defines basic protocol type CK_USER_TYPE.
type UserType uint32

// UTF8Char defines basic protocol type CK_UTF8CHAR.
type UTF8Char = byte

// VoidPtr defines basic protocol type CK_VOID_PTR.
type VoidPtr = byte

// Attribute defines compound protocol type CK_ATTRIBUTE.
type Attribute struct {
	Type  AttributeType
	Value []Byte
}

// GcmParams defines compound protocol type CK_GCM_PARAMS.
type GcmParams struct {
	Iv      []Byte
	IvBits  Ulong
	AAD     []Byte
	TagBits Ulong
}

// Info defines compound protocol type CK_INFO.
type Info struct {
	CryptokiVersion    Version
	ManufacturerID     [32]UTF8Char
	Flags              Flags
	LibraryDescription [32]UTF8Char
	LibraryVersion     Version
}

// Mechanism defines compound protocol type CK_MECHANISM.
type Mechanism struct {
	Mechanism MechanismType
	Parameter []VoidPtr
}

// MechanismInfo defines compound protocol type CK_MECHANISM_INFO.
type MechanismInfo struct {
	MinKeySize Ulong
	MaxKeySize Ulong
	Flags      Flags
}

// SlotInfo defines compound protocol type CK_SLOT_INFO.
type SlotInfo struct {
	SlotDescription [64]UTF8Char
	ManufacturerID  [32]UTF8Char
	Flags           Flags
	HardwareVersion Version
	FirmwareVersion Version
}

// TokenInfo defines compound protocol type CK_TOKEN_INFO.
type TokenInfo struct {
	Label              [32]UTF8Char
	ManufacturerID     [32]UTF8Char
	Model              [16]UTF8Char
	SerialNumber       [16]Char
	Flags              Flags
	MaxSessionCount    Ulong
	SessionCount       Ulong
	MaxRwSessionCount  Ulong
	RwSessionCount     Ulong
	MaxPinLen          Ulong
	MinPinLen          Ulong
	TotalPublicMemory  Ulong
	FreePublicMemory   Ulong
	TotalPrivateMemory Ulong
	FreePrivateMemory  Ulong
	HardwareVersion    Version
	FirmwareVersion    Version
	UtcTime            [16]Char
}

// Version defines compound protocol type CK_VERSION.
type Version struct {
	Major Byte
	Minor Byte
}

// ImplOpenSessionReq defines the arguments of C_ImplOpenSession.
type ImplOpenSessionReq struct {
	ProviderID Ulong
	Session    SessionHandle
}

// ImplCloseSessionReq defines the arguments of C_ImplCloseSession.
type ImplCloseSessionReq struct {
	Session SessionHandle
}

// InitializeResp defines the result of C_Initialize.
type InitializeResp struct {
	ProviderID Ulong
}

// GetInfoResp defines the result of C_GetInfo.
type GetInfoResp struct {
	Info Info
}

// GetSlotListReq defines the arguments of C_GetSlotList.
type GetSlotListReq struct {
	TokenPresent Bbool
	SlotListSize uint32
}

// GetSlotListResp defines the result of C_GetSlotList.
type GetSlotListResp struct {
	SlotListLen int
	SlotList    []SlotID
}

// GetSlotInfoReq defines the arguments of C_GetSlotInfo.
type GetSlotInfoReq struct {
	SlotID SlotID
}

// GetSlotInfoResp defines the result of C_GetSlotInfo.
type GetSlotInfoResp struct {
	Info SlotInfo
}

// GetTokenInfoReq defines the arguments of C_GetTokenInfo.
type GetTokenInfoReq struct {
	SlotID SlotID
}

// GetTokenInfoResp defines the result of C_GetTokenInfo.
type GetTokenInfoResp struct {
	Info TokenInfo
}

// GetMechanismListReq defines the arguments of C_GetMechanismList.
type GetMechanismListReq struct {
	SlotID            SlotID
	MechanismListSize uint32
}

// GetMechanismListResp defines the result of C_GetMechanismList.
type GetMechanismListResp struct {
	MechanismListLen int
	MechanismList    []MechanismType
}

// GetMechanismInfoReq defines the arguments of C_GetMechanismInfo.
type GetMechanismInfoReq struct {
	SlotID SlotID
	Type   MechanismType
}

// GetMechanismInfoResp defines the result of C_GetMechanismInfo.
type GetMechanismInfoResp struct {
	Info MechanismInfo
}

// InitTokenReq defines the arguments of C_InitToken.
type InitTokenReq struct {
	SlotID SlotID
	Pin    []UTF8Char
	Label  [32]UTF8Char
}

// InitPINReq defines the arguments of C_InitPIN.
type InitPINReq struct {
	Pin []UTF8Char
}

// SetPINReq defines the arguments of C_SetPIN.
type SetPINReq struct {
	OldPin []UTF8Char
	NewPin []UTF8Char
}

// OpenSessionReq defines the arguments of C_OpenSession.
type OpenSessionReq struct {
	SlotID SlotID
	Flags  Flags
}

// OpenSessionResp defines the result of C_OpenSession.
type OpenSessionResp struct {
	Session SessionHandle
}

// LoginReq defines the arguments of C_Login.
type LoginReq struct {
	UserType UserType
	Pin      []UTF8Char
}

// CreateObjectReq defines the arguments of C_CreateObject.
type CreateObjectReq struct {
	Template Template
}

// CreateObjectResp defines the result of C_CreateObject.
type CreateObjectResp struct {
	Object ObjectHandle
}

// CopyObjectReq defines the arguments of C_CopyObject.
type CopyObjectReq struct {
	Object   ObjectHandle
	Template Template
}

// CopyObjectResp defines the result of C_CopyObject.
type CopyObjectResp struct {
	NewObject ObjectHandle
}

// DestroyObjectReq defines the arguments of C_DestroyObject.
type DestroyObjectReq struct {
	Object ObjectHandle
}

// GetObjectSizeReq defines the arguments of C_GetObjectSize.
type GetObjectSizeReq struct {
	Object ObjectHandle
}

// GetObjectSizeResp defines the result of C_GetObjectSize.
type GetObjectSizeResp struct {
	Size Ulong
}

// GetAttributeValueReq defines the arguments of C_GetAttributeValue.
type GetAttributeValueReq struct {
	Object   ObjectHandle
	Template Template
}

// GetAttributeValueResp defines the result of C_GetAttributeValue.
type GetAttributeValueResp struct {
	Template Template
}

// FindObjectsInitReq defines the arguments of C_FindObjectsInit.
type FindObjectsInitReq struct {
	Template Template
}

// FindObjectsReq defines the arguments of C_FindObjects.
type FindObjectsReq struct {
	MaxObjectCount Ulong
}

// FindObjectsResp defines the result of C_FindObjects.
type FindObjectsResp struct {
	ObjectLen int
	Object    []ObjectHandle
}

// EncryptInitReq defines the arguments of C_EncryptInit.
type EncryptInitReq struct {
	Mechanism Mechanism
	Key       ObjectHandle
}

// EncryptReq defines the arguments of C_Encrypt.
type EncryptReq struct {
	Data              []Byte
	EncryptedDataSize uint32
}

// EncryptResp defines the result of C_Encrypt.
type EncryptResp struct {
	EncryptedDataLen int
	EncryptedData    []Byte
}

// EncryptUpdateReq defines the arguments of C_EncryptUpdate.
type EncryptUpdateReq struct {
	Part              []Byte
	EncryptedPartSize uint32
}

// EncryptUpdateResp defines the result of C_EncryptUpdate.
type EncryptUpdateResp struct {
	EncryptedPartLen int
	EncryptedPart    []Byte
}

// EncryptFinalReq defines the arguments of C_EncryptFinal.
type EncryptFinalReq struct {
	LastEncryptedPartSize uint32
}

// EncryptFinalResp defines the result of C_EncryptFinal.
type EncryptFinalResp struct {
	LastEncryptedPartLen int
	LastEncryptedPart    []Byte
}

// DecryptInitReq defines the arguments of C_DecryptInit.
type DecryptInitReq struct {
	Mechanism Mechanism
	Key       ObjectHandle
}

// DecryptReq defines the arguments of C_Decrypt.
type DecryptReq struct {
	EncryptedData []Byte
	DataSize      uint32
}

// DecryptResp defines the result of C_Decrypt.
type DecryptResp struct {
	DataLen int
	Data    []Byte
}

// DecryptUpdateReq defines the arguments of C_DecryptUpdate.
type DecryptUpdateReq struct {
	EncryptedPart []Byte
	PartSize      uint32
}

// DecryptUpdateResp defines the result of C_DecryptUpdate.
type DecryptUpdateResp struct {
	PartLen int
	Part    []Byte
}

// DecryptFinalReq defines the arguments of C_DecryptFinal.
type DecryptFinalReq struct {
	LastPartSize uint32
}

// DecryptFinalResp defines the result of C_DecryptFinal.
type DecryptFinalResp struct {
	LastPartLen int
	LastPart    []Byte
}

// DigestInitReq defines the arguments of C_DigestInit.
type DigestInitReq struct {
	Mechanism Mechanism
}

// DigestReq defines the arguments of C_Digest.
type DigestReq struct {
	Data       []Byte
	DigestSize uint32
}

// DigestResp defines the result of C_Digest.
type DigestResp struct {
	DigestLen int
	Digest    []Byte
}

// DigestUpdateReq defines the arguments of C_DigestUpdate.
type DigestUpdateReq struct {
	Part []Byte
}

// DigestFinalReq defines the arguments of C_DigestFinal.
type DigestFinalReq struct {
	DigestSize uint32
}

// DigestFinalResp defines the result of C_DigestFinal.
type DigestFinalResp struct {
	DigestLen int
	Digest    []Byte
}

// SignInitReq defines the arguments of C_SignInit.
type SignInitReq struct {
	Mechanism Mechanism
	Key       ObjectHandle
}

// SignReq defines the arguments of C_Sign.
type SignReq struct {
	Data          []Byte
	SignatureSize uint32
}

// SignResp defines the result of C_Sign.
type SignResp struct {
	SignatureLen int
	Signature    []Byte
}

// SignUpdateReq defines the arguments of C_SignUpdate.
type SignUpdateReq struct {
	Part []Byte
}

// SignFinalReq defines the arguments of C_SignFinal.
type SignFinalReq struct {
	SignatureSize uint32
}

// SignFinalResp defines the result of C_SignFinal.
type SignFinalResp struct {
	SignatureLen int
	Signature    []Byte
}

// VerifyInitReq defines the arguments of C_VerifyInit.
type VerifyInitReq struct {
	Mechanism Mechanism
	Key       ObjectHandle
}

// VerifyReq defines the arguments of C_Verify.
type VerifyReq struct {
	Data      []Byte
	Signature []Byte
}

// VerifyUpdateReq defines the arguments of C_VerifyUpdate.
type VerifyUpdateReq struct {
	Part []Byte
}

// VerifyFinalReq defines the arguments of C_VerifyFinal.
type VerifyFinalReq struct {
	Signature []Byte
}

// GenerateKeyReq defines the arguments of C_GenerateKey.
type GenerateKeyReq struct {
	Mechanism Mechanism
	Template  Template
}

// GenerateKeyResp defines the result of C_GenerateKey.
type GenerateKeyResp struct {
	Key ObjectHandle
}

// GenerateKeyPairReq defines the arguments of C_GenerateKeyPair.
type GenerateKeyPairReq struct {
	Mechanism          Mechanism
	PublicKeyTemplate  Template
	PrivateKeyTemplate Template
}

// GenerateKeyPairResp defines the result of C_GenerateKeyPair.
type GenerateKeyPairResp struct {
	PublicKey  ObjectHandle
	PrivateKey ObjectHandle
}

// SeedRandomReq defines the arguments of C_SeedRandom.
type SeedRandomReq struct {
	Seed []Byte
}

// GenerateRandomReq defines the arguments of C_GenerateRandom.
type GenerateRandomReq struct {
	RandomLen Ulong
}

// GenerateRandomResp defines the result of C_GenerateRandom.
type GenerateRandomResp struct {
	RandomData []Byte
}

// Provider defines the PKCS #11 provider interface.
type Provider interface {
	ImplOpenSession(req *ImplOpenSessionReq) error
	ImplCloseSession(req *ImplCloseSessionReq) error
	Initialize() (*InitializeResp, error)
	GetInfo() (*GetInfoResp, error)
	GetSlotList(req *GetSlotListReq) (*GetSlotListResp, error)
	GetSlotInfo(req *GetSlotInfoReq) (*GetSlotInfoResp, error)
	GetTokenInfo(req *GetTokenInfoReq) (*GetTokenInfoResp, error)
	GetMechanismList(req *GetMechanismListReq) (*GetMechanismListResp, error)
	GetMechanismInfo(req *GetMechanismInfoReq) (*GetMechanismInfoResp, error)
	InitToken(req *InitTokenReq) error
	InitPIN(req *InitPINReq) error
	SetPIN(req *SetPINReq) error
	OpenSession(req *OpenSessionReq) (*OpenSessionResp, error)
	CloseSession() error
	Login(req *LoginReq) error
	Logout() error
	CreateObject(req *CreateObjectReq) (*CreateObjectResp, error)
	CopyObject(req *CopyObjectReq) (*CopyObjectResp, error)
	DestroyObject(req *DestroyObjectReq) error
	GetObjectSize(req *GetObjectSizeReq) (*GetObjectSizeResp, error)
	GetAttributeValue(req *GetAttributeValueReq) (*GetAttributeValueResp, error)
	FindObjectsInit(req *FindObjectsInitReq) error
	FindObjects(req *FindObjectsReq) (*FindObjectsResp, error)
	FindObjectsFinal() error
	EncryptInit(req *EncryptInitReq) error
	Encrypt(req *EncryptReq) (*EncryptResp, error)
	EncryptUpdate(req *EncryptUpdateReq) (*EncryptUpdateResp, error)
	EncryptFinal(req *EncryptFinalReq) (*EncryptFinalResp, error)
	DecryptInit(req *DecryptInitReq) error
	Decrypt(req *DecryptReq) (*DecryptResp, error)
	DecryptUpdate(req *DecryptUpdateReq) (*DecryptUpdateResp, error)
	DecryptFinal(req *DecryptFinalReq) (*DecryptFinalResp, error)
	DigestInit(req *DigestInitReq) error
	Digest(req *DigestReq) (*DigestResp, error)
	DigestUpdate(req *DigestUpdateReq) error
	DigestFinal(req *DigestFinalReq) (*DigestFinalResp, error)
	SignInit(req *SignInitReq) error
	Sign(req *SignReq) (*SignResp, error)
	SignUpdate(req *SignUpdateReq) error
	SignFinal(req *SignFinalReq) (*SignFinalResp, error)
	VerifyInit(req *VerifyInitReq) error
	Verify(req *VerifyReq) error
	VerifyUpdate(req *VerifyUpdateReq) error
	VerifyFinal(req *VerifyFinalReq) error
	GenerateKey(req *GenerateKeyReq) (*GenerateKeyResp, error)
	GenerateKeyPair(req *GenerateKeyPairReq) (*GenerateKeyPairResp, error)
	SeedRandom(req *SeedRandomReq) error
	GenerateRandom(req *GenerateRandomReq) (*GenerateRandomResp, error)
}

// Base provides a dummy implementation of the Provider interface.
type Base struct{}

// ImplOpenSession implements the Provider.ImplOpenSession().
func (b *Base) ImplOpenSession(req *ImplOpenSessionReq) error {
	return ErrFunctionNotSupported
}

// ImplCloseSession implements the Provider.ImplCloseSession().
func (b *Base) ImplCloseSession(req *ImplCloseSessionReq) error {
	return ErrFunctionNotSupported
}

// Initialize implements the Provider.Initialize().
func (b *Base) Initialize() (*InitializeResp, error) {
	return nil, ErrFunctionNotSupported
}

// GetInfo implements the Provider.GetInfo().
func (b *Base) GetInfo() (*GetInfoResp, error) {
	return nil, ErrFunctionNotSupported
}

// GetSlotList implements the Provider.GetSlotList().
func (b *Base) GetSlotList(req *GetSlotListReq) (*GetSlotListResp, error) {
	return nil, ErrFunctionNotSupported
}

// GetSlotInfo implements the Provider.GetSlotInfo().
func (b *Base) GetSlotInfo(req *GetSlotInfoReq) (*GetSlotInfoResp, error) {
	return nil, ErrFunctionNotSupported
}

// GetTokenInfo implements the Provider.GetTokenInfo().
func (b *Base) GetTokenInfo(req *GetTokenInfoReq) (*GetTokenInfoResp, error) {
	return nil, ErrFunctionNotSupported
}

// GetMechanismList implements the Provider.GetMechanismList().
func (b *Base) GetMechanismList(req *GetMechanismListReq) (*GetMechanismListResp, error) {
	return nil, ErrFunctionNotSupported
}

// GetMechanismInfo implements the Provider.GetMechanismInfo().
func (b *Base) GetMechanismInfo(req *GetMechanismInfoReq) (*GetMechanismInfoResp, error) {
	return nil, ErrFunctionNotSupported
}

// InitToken implements the Provider.InitToken().
func (b *Base) InitToken(req *InitTokenReq) error {
	return ErrFunctionNotSupported
}

// InitPIN implements the Provider.InitPIN().
func (b *Base) InitPIN(req *InitPINReq) error {
	return ErrFunctionNotSupported
}

// SetPIN implements the Provider.SetPIN().
func (b *Base) SetPIN(req *SetPINReq) error {
	return ErrFunctionNotSupported
}

// OpenSession implements the Provider.OpenSession().
func (b *Base) OpenSession(req *OpenSessionReq) (*OpenSessionResp, error) {
	return nil, ErrFunctionNotSupported
}

// CloseSession implements the Provider.CloseSession().
func (b *Base) CloseSession() error {
	return ErrFunctionNotSupported
}

// Login implements the Provider.Login().
func (b *Base) Login(req *LoginReq) error {
	return ErrFunctionNotSupported
}

// Logout implements the Provider.Logout().
func (b *Base) Logout() error {
	return ErrFunctionNotSupported
}

// CreateObject implements the Provider.CreateObject().
func (b *Base) CreateObject(req *CreateObjectReq) (*CreateObjectResp, error) {
	return nil, ErrFunctionNotSupported
}

// CopyObject implements the Provider.CopyObject().
func (b *Base) CopyObject(req *CopyObjectReq) (*CopyObjectResp, error) {
	return nil, ErrFunctionNotSupported
}

// DestroyObject implements the Provider.DestroyObject().
func (b *Base) DestroyObject(req *DestroyObjectReq) error {
	return ErrFunctionNotSupported
}

// GetObjectSize implements the Provider.GetObjectSize().
func (b *Base) GetObjectSize(req *GetObjectSizeReq) (*GetObjectSizeResp, error) {
	return nil, ErrFunctionNotSupported
}

// GetAttributeValue implements the Provider.GetAttributeValue().
func (b *Base) GetAttributeValue(req *GetAttributeValueReq) (*GetAttributeValueResp, error) {
	return nil, ErrFunctionNotSupported
}

// FindObjectsInit implements the Provider.FindObjectsInit().
func (b *Base) FindObjectsInit(req *FindObjectsInitReq) error {
	return ErrFunctionNotSupported
}

// FindObjects implements the Provider.FindObjects().
func (b *Base) FindObjects(req *FindObjectsReq) (*FindObjectsResp, error) {
	return nil, ErrFunctionNotSupported
}

// FindObjectsFinal implements the Provider.FindObjectsFinal().
func (b *Base) FindObjectsFinal() error {
	return ErrFunctionNotSupported
}

// EncryptInit implements the Provider.EncryptInit().
func (b *Base) EncryptInit(req *EncryptInitReq) error {
	return ErrFunctionNotSupported
}

// Encrypt implements the Provider.Encrypt().
func (b *Base) Encrypt(req *EncryptReq) (*EncryptResp, error) {
	return nil, ErrFunctionNotSupported
}

// EncryptUpdate implements the Provider.EncryptUpdate().
func (b *Base) EncryptUpdate(req *EncryptUpdateReq) (*EncryptUpdateResp, error) {
	return nil, ErrFunctionNotSupported
}

// EncryptFinal implements the Provider.EncryptFinal().
func (b *Base) EncryptFinal(req *EncryptFinalReq) (*EncryptFinalResp, error) {
	return nil, ErrFunctionNotSupported
}

// DecryptInit implements the Provider.DecryptInit().
func (b *Base) DecryptInit(req *DecryptInitReq) error {
	return ErrFunctionNotSupported
}

// Decrypt implements the Provider.Decrypt().
func (b *Base) Decrypt(req *DecryptReq) (*DecryptResp, error) {
	return nil, ErrFunctionNotSupported
}

// DecryptUpdate implements the Provider.DecryptUpdate().
func (b *Base) DecryptUpdate(req *DecryptUpdateReq) (*DecryptUpdateResp, error) {
	return nil, ErrFunctionNotSupported
}

// DecryptFinal implements the Provider.DecryptFinal().
func (b *Base) DecryptFinal(req *DecryptFinalReq) (*DecryptFinalResp, error) {
	return nil, ErrFunctionNotSupported
}

// DigestInit implements the Provider.DigestInit().
func (b *Base) DigestInit(req *DigestInitReq) error {
	return ErrFunctionNotSupported
}

// Digest implements the Provider.Digest().
func (b *Base) Digest(req *DigestReq) (*DigestResp, error) {
	return nil, ErrFunctionNotSupported
}

// DigestUpdate implements the Provider.DigestUpdate().
func (b *Base) DigestUpdate(req *DigestUpdateReq) error {
	return ErrFunctionNotSupported
}

// DigestFinal implements the Provider.DigestFinal().
func (b *Base) DigestFinal(req *DigestFinalReq) (*DigestFinalResp, error) {
	return nil, ErrFunctionNotSupported
}

// SignInit implements the Provider.SignInit().
func (b *Base) SignInit(req *SignInitReq) error {
	return ErrFunctionNotSupported
}

// Sign implements the Provider.Sign().
func (b *Base) Sign(req *SignReq) (*SignResp, error) {
	return nil, ErrFunctionNotSupported
}

// SignUpdate implements the Provider.SignUpdate().
func (b *Base) SignUpdate(req *SignUpdateReq) error {
	return ErrFunctionNotSupported
}

// SignFinal implements the Provider.SignFinal().
func (b *Base) SignFinal(req *SignFinalReq) (*SignFinalResp, error) {
	return nil, ErrFunctionNotSupported
}

// VerifyInit implements the Provider.VerifyInit().
func (b *Base) VerifyInit(req *VerifyInitReq) error {
	return ErrFunctionNotSupported
}

// Verify implements the Provider.Verify().
func (b *Base) Verify(req *VerifyReq) error {
	return ErrFunctionNotSupported
}

// VerifyUpdate implements the Provider.VerifyUpdate().
func (b *Base) VerifyUpdate(req *VerifyUpdateReq) error {
	return ErrFunctionNotSupported
}

// VerifyFinal implements the Provider.VerifyFinal().
func (b *Base) VerifyFinal(req *VerifyFinalReq) error {
	return ErrFunctionNotSupported
}

// GenerateKey implements the Provider.GenerateKey().
func (b *Base) GenerateKey(req *GenerateKeyReq) (*GenerateKeyResp, error) {
	return nil, ErrFunctionNotSupported
}

// GenerateKeyPair implements the Provider.GenerateKeyPair().
func (b *Base) GenerateKeyPair(req *GenerateKeyPairReq) (*GenerateKeyPairResp, error) {
	return nil, ErrFunctionNotSupported
}

// SeedRandom implements the Provider.SeedRandom().
func (b *Base) SeedRandom(req *SeedRandomReq) error {
	return ErrFunctionNotSupported
}

// GenerateRandom implements the Provider.GenerateRandom().
func (b *Base) GenerateRandom(req *GenerateRandomReq) (*GenerateRandomResp, error) {
	return nil, ErrFunctionNotSupported
}

var msgTypeNames = map[Type]string{
	0xc0000101: "ImplOpenSession",
	0xc0000102: "ImplCloseSession",
	0xc0050401: "Initialize",
	0xc0050403: "GetInfo",
	0xc0050501: "GetSlotList",
	0xc0050502: "GetSlotInfo",
	0xc0050503: "GetTokenInfo",
	0xc0050505: "GetMechanismList",
	0xc0050506: "GetMechanismInfo",
	0xc0050507: "InitToken",
	0xc0050508: "InitPIN",
	0xc0050509: "SetPIN",
	0xc0050601: "OpenSession",
	0xc0050602: "CloseSession",
	0xc0050608: "Login",
	0xc005060a: "Logout",
	0xc0050701: "CreateObject",
	0xc0050702: "CopyObject",
	0xc0050703: "DestroyObject",
	0xc0050704: "GetObjectSize",
	0xc0050705: "GetAttributeValue",
	0xc0050707: "FindObjectsInit",
	0xc0050708: "FindObjects",
	0xc0050709: "FindObjectsFinal",
	0xc0050801: "EncryptInit",
	0xc0050802: "Encrypt",
	0xc0050803: "EncryptUpdate",
	0xc0050804: "EncryptFinal",
	0xc0050a01: "DecryptInit",
	0xc0050a02: "Decrypt",
	0xc0050a03: "DecryptUpdate",
	0xc0050a04: "DecryptFinal",
	0xc0050c01: "DigestInit",
	0xc0050c02: "Digest",
	0xc0050c03: "DigestUpdate",
	0xc0050c05: "DigestFinal",
	0xc0050d01: "SignInit",
	0xc0050d02: "Sign",
	0xc0050d03: "SignUpdate",
	0xc0050d04: "SignFinal",
	0xc0050f01: "VerifyInit",
	0xc0050f02: "Verify",
	0xc0050f03: "VerifyUpdate",
	0xc0050f04: "VerifyFinal",
	0xc0051201: "GenerateKey",
	0xc0051202: "GenerateKeyPair",
	0xc0051301: "SeedRandom",
	0xc0051302: "GenerateRandom",
}

// Dispatch dispatches the message to provider and returns the message
// response.
func Dispatch(p Provider, msgType Type, req []byte) (CKRV, []byte) {
	resp, err := call(p, msgType, req)
	if err != nil {
		ckrv, ok := err.(CKRV)
		if ok {
			return ckrv, nil
		}
		log.Printf("dispatch error: %s", err)
		return ErrDataInvalid, nil
	}
	return ErrOk, resp
}

func call(p Provider, msgType Type, data []byte) ([]byte, error) {
	switch msgType {
	case 0xc0000101: // ImplOpenSession
		var req ImplOpenSessionReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.ImplOpenSession(&req)

	case 0xc0000102: // ImplCloseSession
		var req ImplCloseSessionReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.ImplCloseSession(&req)

	case 0xc0050401: // Initialize
		resp, err := p.Initialize()
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050403: // GetInfo
		resp, err := p.GetInfo()
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050501: // GetSlotList
		var req GetSlotListReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.GetSlotList(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050502: // GetSlotInfo
		var req GetSlotInfoReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.GetSlotInfo(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050503: // GetTokenInfo
		var req GetTokenInfoReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.GetTokenInfo(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050505: // GetMechanismList
		var req GetMechanismListReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.GetMechanismList(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050506: // GetMechanismInfo
		var req GetMechanismInfoReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.GetMechanismInfo(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050507: // InitToken
		var req InitTokenReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.InitToken(&req)

	case 0xc0050508: // InitPIN
		var req InitPINReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.InitPIN(&req)

	case 0xc0050509: // SetPIN
		var req SetPINReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.SetPIN(&req)

	case 0xc0050601: // OpenSession
		var req OpenSessionReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.OpenSession(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050602: // CloseSession
		return nil, p.CloseSession()

	case 0xc0050608: // Login
		var req LoginReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.Login(&req)

	case 0xc005060a: // Logout
		return nil, p.Logout()

	case 0xc0050701: // CreateObject
		var req CreateObjectReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.CreateObject(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050702: // CopyObject
		var req CopyObjectReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.CopyObject(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050703: // DestroyObject
		var req DestroyObjectReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.DestroyObject(&req)

	case 0xc0050704: // GetObjectSize
		var req GetObjectSizeReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.GetObjectSize(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050705: // GetAttributeValue
		var req GetAttributeValueReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.GetAttributeValue(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050707: // FindObjectsInit
		var req FindObjectsInitReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.FindObjectsInit(&req)

	case 0xc0050708: // FindObjects
		var req FindObjectsReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.FindObjects(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050709: // FindObjectsFinal
		return nil, p.FindObjectsFinal()

	case 0xc0050801: // EncryptInit
		var req EncryptInitReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.EncryptInit(&req)

	case 0xc0050802: // Encrypt
		var req EncryptReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.Encrypt(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050803: // EncryptUpdate
		var req EncryptUpdateReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.EncryptUpdate(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050804: // EncryptFinal
		var req EncryptFinalReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.EncryptFinal(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050a01: // DecryptInit
		var req DecryptInitReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.DecryptInit(&req)

	case 0xc0050a02: // Decrypt
		var req DecryptReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.Decrypt(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050a03: // DecryptUpdate
		var req DecryptUpdateReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.DecryptUpdate(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050a04: // DecryptFinal
		var req DecryptFinalReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.DecryptFinal(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050c01: // DigestInit
		var req DigestInitReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.DigestInit(&req)

	case 0xc0050c02: // Digest
		var req DigestReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.Digest(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050c03: // DigestUpdate
		var req DigestUpdateReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.DigestUpdate(&req)

	case 0xc0050c05: // DigestFinal
		var req DigestFinalReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.DigestFinal(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050d01: // SignInit
		var req SignInitReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.SignInit(&req)

	case 0xc0050d02: // Sign
		var req SignReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.Sign(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050d03: // SignUpdate
		var req SignUpdateReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.SignUpdate(&req)

	case 0xc0050d04: // SignFinal
		var req SignFinalReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.SignFinal(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0050f01: // VerifyInit
		var req VerifyInitReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.VerifyInit(&req)

	case 0xc0050f02: // Verify
		var req VerifyReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.Verify(&req)

	case 0xc0050f03: // VerifyUpdate
		var req VerifyUpdateReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.VerifyUpdate(&req)

	case 0xc0050f04: // VerifyFinal
		var req VerifyFinalReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.VerifyFinal(&req)

	case 0xc0051201: // GenerateKey
		var req GenerateKeyReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.GenerateKey(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0051202: // GenerateKeyPair
		var req GenerateKeyPairReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.GenerateKeyPair(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	case 0xc0051301: // SeedRandom
		var req SeedRandomReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		return nil, p.SeedRandom(&req)

	case 0xc0051302: // GenerateRandom
		var req GenerateRandomReq
		if err := Unmarshal(data, &req); err != nil {
			return nil, err
		}
		resp, err := p.GenerateRandom(&req)
		if err != nil {
			return nil, err
		}
		return Marshal(resp)

	default:
		return nil, ErrFunctionNotSupported
	}
}
