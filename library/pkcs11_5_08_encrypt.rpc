/* -*- c -*-
 *
 * Copyright (c) 2020-2023 Markku Rossi.
 *
 * All rights reserved.
 */

#include "vp_includes.h"

/** Version: 3.0 */
/** Section: 5.8 Encryption functions */

/* C_EncryptInit initializes an encryption operation. */
CK_RV
C_EncryptInit
(
  CK_SESSION_HANDLE hSession,    /* the session's handle */
  CK_MECHANISM_PTR  pMechanism,  /* the encryption mechanism */
  CK_OBJECT_HANDLE  hKey         /* handle of encryption key */
)
{
  CK_GCM_PARAMS_PTR gcm_params = NULL;
  CK_BYTE_PTR iv = NULL;
  CK_ULONG iv_len = 0;

  if (pMechanism->mechanism == CKM_AES_GCM
      && pMechanism->ulParameterLen == sizeof(CK_GCM_PARAMS))
    {
      gcm_params = (CK_GCM_PARAMS_PTR) pMechanism->pParameter;
      if (gcm_params == NULL)
        {
          vp_log(LOG_ERR, "CK_GCM_PARAMS is NULL");
          return CKR_MECHANISM_PARAM_INVALID;
        }
      if (gcm_params->ulIvBits == 0)
        {
          iv = gcm_params->pIv;
          iv_len = gcm_params->ulIvLen;
        }
    }

  /** Header,Call
   *
   * Session:
   *   CK_SESSION_HANDLE hSession
   * Inputs:
   *   CK_MECHANISM      pMechanism
   *   CK_OBJECT_HANDLE  hKey
   * Outputs:
   *   [CK_ULONG iv_len]CK_BYTE iv
   */

  if (gcm_params != NULL && gcm_params->ulIvBits == 0)
    gcm_params->ulIvBits = gcm_params->ulIvLen * 8;

  /** Trailer */
}

/* C_Encrypt encrypts single-part data. */
CK_RV
C_Encrypt
(
  CK_SESSION_HANDLE hSession,            /* session's handle */
  CK_BYTE_PTR       pData,               /* the plaintext data */
  CK_ULONG          ulDataLen,           /* bytes of plaintext */
  CK_BYTE_PTR       pEncryptedData,      /* gets ciphertext */
  CK_ULONG_PTR      pulEncryptedDataLen  /* gets c-text size */
)
{
  /**
   * Session:
   *                                 CK_SESSION_HANDLE hSession
   * Inputs:
   *             [CK_ULONG ulDataLen]CK_BYTE           pData
   * InOutputs:
   *   [CK_ULONG pulEncryptedDataLen]CK_BYTE           pEncryptedData?
   */
}

/* C_EncryptUpdate continues a multiple-part encryption
 * operation.
 */
CK_RV
C_EncryptUpdate
(
  CK_SESSION_HANDLE hSession,           /* session's handle */
  CK_BYTE_PTR       pPart,              /* the plaintext data */
  CK_ULONG          ulPartLen,          /* plaintext data len */
  CK_BYTE_PTR       pEncryptedPart,     /* gets ciphertext */
  CK_ULONG_PTR      pulEncryptedPartLen /* gets c-text size */
)
{
  /**
   * Session:
   *                                 CK_SESSION_HANDLE hSession
   * Inputs:
   *             [CK_ULONG ulPartLen]CK_BYTE           pPart
   * InOutputs:
   *   [CK_ULONG pulEncryptedPartLen]CK_BYTE           pEncryptedPart?
   */
}

/* C_EncryptFinal finishes a multiple-part encryption
 * operation.
 */
CK_RV
C_EncryptFinal
(
  CK_SESSION_HANDLE hSession,                /* session handle */
  CK_BYTE_PTR       pLastEncryptedPart,      /* last c-text */
  CK_ULONG_PTR      pulLastEncryptedPartLen  /* gets last size */
)
{
  /**
   * Session:
   *                                       CK_SESSION_HANDLE hSession
   * InOutputs:
   *   [CK_ULONG_PTR pulLastEncryptedPartLen]CK_BYTE         pLastEncryptedPart?
   */
}
