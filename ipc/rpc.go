// This file is auto-generated by rpcc.
//
// Copyright (C) 2021 Markku Rossi.
//
// All rights reserved.
//

package ipc

// CKAttributeType defines basic protocol type CK_ATTRIBUTE_TYPE.
type CKAttributeType uint32

// CKBbool defines basic protocol type CK_BBOOL.
type CKBbool bool

// CKByte defines basic protocol type CK_BYTE.
type CKByte byte

// CKChar defines basic protocol type CK_CHAR.
type CKChar byte

// CKFlags defines basic protocol type CK_FLAGS.
type CKFlags uint32

// CKMechanismType defines basic protocol type CK_MECHANISM_TYPE.
type CKMechanismType uint32

// CKObjectHandle defines basic protocol type CK_OBJECT_HANDLE.
type CKObjectHandle uint32

// CKSessionHandle defines basic protocol type CK_SESSION_HANDLE.
type CKSessionHandle uint32

// CKSlotID defines basic protocol type CK_SLOT_ID.
type CKSlotID uint32

// CKUlong defines basic protocol type CK_ULONG.
type CKUlong uint32

// CKUTF8Char defines basic protocol type CK_UTF8CHAR.
type CKUTF8Char byte

// CKVoidPtr defines basic protocol type CK_VOID_PTR.
type CKVoidPtr byte

// CKAttribute defines compound protocol type CK_ATTRIBUTE.
type CKAttribute struct {
	Type   CKAttributeType
	PValue []CKVoidPtr
}

// CKInfo defines compound protocol type CK_INFO.
type CKInfo struct {
	CryptokiVersion    CKVersion
	ManufacturerID     [32]CKUTF8Char
	Flags              CKFlags
	LibraryDescription [32]CKUTF8Char
	LibraryVersion     CKVersion
}

// CKMechanismInfo defines compound protocol type CK_MECHANISM_INFO.
type CKMechanismInfo struct {
	UlMinKeySize CKUlong
	UlMaxKeySize CKUlong
	Flags        CKFlags
}

// CKSlotInfo defines compound protocol type CK_SLOT_INFO.
type CKSlotInfo struct {
	SlotDescription [64]CKUTF8Char
	ManufacturerID  [32]CKUTF8Char
	Flags           CKFlags
	HardwareVersion CKVersion
	FirmwareVersion CKVersion
}

// CKTokenInfo defines compound protocol type CK_TOKEN_INFO.
type CKTokenInfo struct {
	Label                [32]CKUTF8Char
	ManufacturerID       [32]CKUTF8Char
	Model                [16]CKUTF8Char
	SerialNumber         [16]CKChar
	Flags                CKFlags
	UlMaxSessionCount    CKUlong
	UlSessionCount       CKUlong
	UlMaxRwSessionCount  CKUlong
	UlRwSessionCount     CKUlong
	UlMaxPinLen          CKUlong
	UlMinPinLen          CKUlong
	UlTotalPublicMemory  CKUlong
	UlFreePublicMemory   CKUlong
	UlTotalPrivateMemory CKUlong
	UlFreePrivateMemory  CKUlong
	HardwareVersion      CKVersion
	FirmwareVersion      CKVersion
	UtcTime              [16]CKChar
}

// CKVersion defines compound protocol type CK_VERSION.
type CKVersion struct {
	Major CKByte
	Minor CKByte
}

// CGetSlotListReq defines the arguments of C_GetSlotList.
type CGetSlotListReq struct {
	TokenPresent CKBbool
}

// CGetSlotListResp defines the result of C_GetSlotList.
type CGetSlotListResp struct {
	PSlotList []CKSlotID
}

// CGetSlotInfoReq defines the arguments of C_GetSlotInfo.
type CGetSlotInfoReq struct {
	SlotID CKSlotID
}

// CGetSlotInfoResp defines the result of C_GetSlotInfo.
type CGetSlotInfoResp struct {
	PInfo CKSlotInfo
}

// CInitTokenReq defines the arguments of C_InitToken.
type CInitTokenReq struct {
	SlotID CKSlotID
	PPin   []CKUTF8Char
	PLabel [32]CKUTF8Char
}

// CInitPINReq defines the arguments of C_InitPIN.
type CInitPINReq struct {
	PPin []CKUTF8Char
}

// CSetPINReq defines the arguments of C_SetPIN.
type CSetPINReq struct {
	POldPin []CKUTF8Char
	PNewPin []CKUTF8Char
}

// CCreateObjectReq defines the arguments of C_CreateObject.
type CCreateObjectReq struct {
	PTemplate []CKAttribute
}

// CCreateObjectResp defines the result of C_CreateObject.
type CCreateObjectResp struct {
	PhObject CKObjectHandle
}

// CCopyObjectReq defines the arguments of C_CopyObject.
type CCopyObjectReq struct {
	HObject   CKObjectHandle
	PTemplate []CKAttribute
}

// CCopyObjectResp defines the result of C_CopyObject.
type CCopyObjectResp struct {
	PhNewObject CKObjectHandle
}

// CDestroyObjectReq defines the arguments of C_DestroyObject.
type CDestroyObjectReq struct {
	HObject CKObjectHandle
}

// CGetObjectSizeReq defines the arguments of C_GetObjectSize.
type CGetObjectSizeReq struct {
	HObject CKObjectHandle
}

// CGetObjectSizeResp defines the result of C_GetObjectSize.
type CGetObjectSizeResp struct {
	PulSize CKUlong
}

// CGetAttributeValueReq defines the arguments of C_GetAttributeValue.
type CGetAttributeValueReq struct {
	HObject   CKObjectHandle
	PTemplate []CKAttribute
}

// CGetAttributeValueResp defines the result of C_GetAttributeValue.
type CGetAttributeValueResp struct {
	PTemplate []CKAttribute
}

// CSetAttributeValueReq defines the arguments of C_SetAttributeValue.
type CSetAttributeValueReq struct {
	HObject   CKObjectHandle
	PTemplate []CKAttribute
}

// CFindObjectsInitReq defines the arguments of C_FindObjectsInit.
type CFindObjectsInitReq struct {
	PTemplate []CKAttribute
}

// CFindObjectsReq defines the arguments of C_FindObjects.
type CFindObjectsReq struct {
	UlMaxObjectCount CKUlong
}

// CFindObjectsResp defines the result of C_FindObjects.
type CFindObjectsResp struct {
	PhObject []CKObjectHandle
}

var msgTypeNames = map[Type]string{
	0xc0050501: "C_GetSlotList",
	0xc0050502: "C_GetSlotInfo",
	0xc0050507: "C_InitToken",
	0xc0050508: "C_InitPIN",
	0xc0050509: "C_SetPIN",
	0xc0050701: "C_CreateObject",
	0xc0050702: "C_CopyObject",
	0xc0050703: "C_DestroyObject",
	0xc0050704: "C_GetObjectSize",
	0xc0050705: "C_GetAttributeValue",
	0xc0050706: "C_SetAttributeValue",
	0xc0050707: "C_FindObjectsInit",
	0xc0050708: "C_FindObjects",
	0xc0050709: "C_FindObjectsFinal",
}
